{"version":3,"sources":["store/actions.js","store/reducer.js","services/ApiConekta.js","images/conekta-logo.svg","components/Header.js","services/ApiCopomex.js","images/Login-02.svg","components/Form.js","components/Table.js","components/ModalEdit.js","components/Admin.js","components/Router.js","App.js","index.js"],"names":["actionTypes","SET_LOGIN","SET_LOADING","SET_MODAL_VISIBLE","SET_ITEM","UPDATE_LIST_ITEMS","setLogin","data","type","setLoading","setModalVisible","setItem","updateListItems","AppContext","createContext","initialState","login","loading","modalVisible","item","listItems","reducer","state","action","Object","assign","urlBase","username","password","a","url","headers","body","credentials","axios","post","then","response","catch","error","console","log","getListRecords","token","get","getById","_id","deleteRecord","delete","putRecord","street","numExt","numInt","cp","suburb","delegation","city","status","country","put","postRecord","Header","className","to","href","src","logo","alt","getInfoByCp","options","method","Forms","mode","useContext","dispatch","useEffect","setStreet","setNumExt","setNumInt","setCp","setSuburb","setDelegation","setCity","setStatus","setCountry","useState","suburbOptions","setSuburbOptions","delegationOptions","setDelegationOptions","cityOptions","setCityOptions","statusOptions","setStatusOptions","countryOptions","setCountryOptions","handleSubmit","value","sessionStorage","getItem","respPost","_","has","Swal","fire","ops","icon","title","text","footer","cleanInputs","handleEdit","respPut","updateList","handleChange","e","undefined","target","name","autoCompletDropdowns","getInfoCp","statusOptionsAux","delegationOptionsAux","suburbOptionsAux","cityOptionsAux","countryOptionsAux","length","respGet","forEach","find","estado","push","label","municipio","asentamiento","ciudad","pais","formLogo","placeholder","onChange","option","defaultValue","isSearchable","disabled","onClick","columns","id","minWidth","useStyles","makeStyles","root","width","container","maxHeight","ReactTable","classes","page","setPage","rowsPerPage","setRowsPerPage","loadData","deleteItem","updateItem","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","align","style","TableBody","slice","row","hover","role","tabIndex","format","IconButton","color","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","CircularProgress","ModalEdit","handleClose","Modal","open","onClose","aria-labelledby","aria-describedby","elevation","Form","Admin","RouterComponent","basename","window","location","pathname","exact","path","render","App","useReducer","Provider","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eb144a63.chunk.js","sourcesContent":["export const actionTypes = {\n    SET_LOGIN: \"SET_LOGIN\",\n    SET_LOADING: \"SET_LOADING\",\n    SET_MODAL_VISIBLE: \"SET_MODAL_VISIBLE\",\n    SET_ITEM: \"SET_ITEM\",\n    UPDATE_LIST_ITEMS: \"UPDATE_LIST_ITEMS\",\n  };\n  export const setLogin = data => ({\n    type: actionTypes.SET_LOGIN,\n    data\n  });\n  \n  export const setLoading = data => ({\n    type: actionTypes.SET_LOADING,\n    data\n  });\n\n  export const setToken = data => ({\n    type: actionTypes.SET_TOKEN,\n    data\n  });\n\n  export const setModalVisible = data => ({\n    type: actionTypes.SET_MODAL_VISIBLE,\n    data\n  });\n\n  export const setItem = data => ({\n    type: actionTypes.SET_ITEM,\n    data\n  });\n\n  export const updateListItems = data => ({\n    type: actionTypes.UPDATE_LIST_ITEMS,\n    data\n  });","import { actionTypes } from \"./actions\";\nimport { createContext } from \"react\";\n\nexport const AppContext = createContext({});\n\nexport const initialState = {\n  login: false,\n  loading: false,\n  modalVisible: false,\n  item: {},\n  listItems: []\n};\n\nexport const reducer = (state = {}, action) => {\n  let response;\n  switch (action.type) {\n    case actionTypes.SET_LOGIN:\n      response = Object.assign({}, state, {\n        login: action.data\n      });\n      return response;\n\n    case actionTypes.SET_LOADING:\n      response = Object.assign({}, state, {\n        loading: action.data\n      });\n      return response;\n\n    case actionTypes.SET_MODAL_VISIBLE:\n      response = Object.assign({}, state, {\n        modalVisible: action.data\n      });\n      return response;\n\n    case actionTypes.SET_ITEM:\n      response = Object.assign({}, state, {\n        item: action.data\n      });\n      return response;\n\n    case actionTypes.UPDATE_LIST_ITEMS:\n      response = Object.assign({}, state, {\n        listItems: action.data\n      });\n      return response;\n\n    default:\n      return;\n  }\n};","import axios from \"axios\";\n\nconst urlBase = \"https://conekta-appi.herokuapp.com\";\n\nexport const login = async (username, password) => {\n    let url = `${urlBase}/login`\n    let headers = { \"content-type\": \"application/json\"}\n    let body = {\n        credentials: {\n            username,\n            password\n        }\n    }\n\n    return await axios.post(url, body, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\nexport const singup = async ({ username, password}) => {\n    let url = `${urlBase}/singup`\n    let headers = { \"content-type\": \"application/json\"}\n    let body = {\n        signup: {\n            username,\n            password\n        }\n    }\n\n    return await axios.post(url, body, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\nexport const getListRecords = async (token) => {\n    let url = `${urlBase}/api/records/lst`\n    let headers = { \"content-type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n\n    return await axios.get(url, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\n\nexport const getById = async (_id, token) => {\n    let url = `${urlBase}/api/records/get/${_id}`\n    let headers = { \"content-type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n\n    return await axios.get(url, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\nexport const deleteRecord = async (_id, token) => {\n    let url = `${urlBase}/api/records/del/${_id}`\n    let headers = { \"content-type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n\n    return await axios.delete(url, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\nexport const putRecord = async (data, token) => {\n    let url = `${urlBase}/api/records/put`\n    let headers = { \"content-type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n    let body = {\n        _id: data._id,\n        street: data.street,\n        numExt: data.numExt,\n        numInt: data.numInt,\n        cp: data.cp,\n        suburb: data.suburb,\n        delegation: data.delegation,\n        city: data.city,\n        status: data.status,\n        country: data.country,\n    }\n\n    return await axios.put(url, body, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};\n\nexport const postRecord = async (data, token) => {\n    let url = `${urlBase}/api/records/post`\n    let headers = { \"content-type\": \"application/json\", \"Authorization\": `Bearer ${token}`}\n    let body = {\n        street: data.street,\n        numExt: data.numExt,\n        numInt: data.numInt,\n        cp: data.cp,\n        suburb: data.suburb,\n        delegation: data.delegation,\n        city: data.city,\n        status: data.status,\n        country: data.country,\n    }\n\n    return await axios.post(url, body, { headers })\n    .then( response => { return response })\n    .catch( error => { console.log(error) })\n};","export default __webpack_public_path__ + \"static/media/conekta-logo.6bb2d24e.svg\";","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport './index.css';\nimport logo from '../images/conekta-logo.svg';\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark navbar-color\">\n      <div className=\"container\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n        <a href=\"/\"><img src={logo}alt=\"conekta logo\"/></a>\n        </Link>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink to={\"/\"} className=\"nav-link\">\n              Formulario\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={\"/admin\"} className=\"nav-link\">\n              Administrador\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nconst urlBase = \"https://api.copomex.com\";\nconst token = \"dc301656-6a80-464c-b645-a351c9c1746a\"\n\nexport const getSearchByCp = async (cp) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/search_cp/${cp}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.cp;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getInfoByCp = async (cp) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/info_cp/${cp}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getStatuses = async () => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/get_estados?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.estado;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDelegationByStatus = async (status) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/get_municipio_por_estado/${status}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.municipios;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const getSuburbByCp = async (cp) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/get_colonia_por_cp/${cp}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.colonia;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCpByStatus = async (status) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/get_cp_por_estado/${status}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.cp;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSuburbBySuburb = async (suburb) => {\n  try {\n    const options = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" },\n      url: `${urlBase}/query/get_colonia_por_municipio/${suburb}?token=${token}`,\n    };\n\n    let response = await axios(options);\n    return response.data.response.colonia;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export default __webpack_public_path__ + \"static/media/Login-02.2ef26962.svg\";","import React, { useContext, useState, useEffect } from \"react\";\nimport { AppContext } from \"../store/reducer\";\nimport { setModalVisible, updateListItems } from \"../store/actions\";\nimport { getInfoByCp } from \"../services/ApiCopomex\";\nimport { postRecord, putRecord, getListRecords } from \"../services/ApiConekta\";\nimport Select from \"react-select\";\nimport Swal from \"sweetalert2\";\nimport _ from \"lodash\";\nimport './index.css';\nimport formLogo from '../images/Login-02.svg';\n\n\nconst Forms = ({ mode }) => {\n  const { state, dispatch } = useContext(AppContext);\n\n  useEffect(() => {\n    if (mode === 'edit') {\n      setStreet(state.item.street)\n      setNumExt(state.item.numExt)\n      setNumInt(state.item.numInt)\n      setCp(state.item.cp)\n      setSuburb(state.item.suburb)\n      setDelegation(state.item.delegation)\n      setCity(state.item.city)\n      setStatus(state.item.status)\n      setCountry(state.item.country)\n    }\n  }, []);\n\n  const [street, setStreet] = useState(\"\");\n  const [numExt, setNumExt] = useState(\"\");\n  const [numInt, setNumInt] = useState(\"\");\n\n  const [cp, setCp] = useState(\"\");\n\n  const [suburb, setSuburb] = useState(\"\");\n  const [suburbOptions, setSuburbOptions] = useState([]);\n\n  const [delegation, setDelegation] = useState(\"\");\n  const [delegationOptions, setDelegationOptions] = useState([]);\n\n  const [city, setCity] = useState(\"\");\n  const [cityOptions, setCityOptions] = useState([]);\n\n  const [status, setStatus] = useState([]);\n  const [statusOptions, setStatusOptions] = useState([]);\n\n  const [country, setCountry] = useState(\"\");\n  const [countryOptions, setCountryOptions] = useState([]);\n\n  const handleSubmit = async () => {\n    const data = {\n      street,\n      numExt,\n      numInt,\n      cp: cp,\n      suburb: suburb.value,\n      delegation: delegation.value,\n      city: city.value,\n      status: status.value,\n      country: country.value\n    }\n    let respPost = await postRecord(data, sessionStorage.getItem('token'));\n    if (_.has(respPost, \"status\") && respPost.status === 200) {\n      Swal.fire(\n        \"Registro Insertado!\",\n        `Se creo el registro con #${respPost.data.ops[0]._id}`,\n        \"success\"\n      );\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Error al guardar\",\n        footer: \"Hubo un error al guardar el registro, por favor reintente!\"\n      });\n    }\n    cleanInputs()\n  }\n\n  const handleEdit = async () => {\n    const data = {\n      _id: state.item._id,\n      street,\n      numExt,\n      numInt,\n      cp: cp,\n      suburb: suburb.value,\n      delegation: delegation.value,\n      city: city.value,\n      status: status.value,\n      country: country.value\n    }\n    let respPut = await putRecord(data, sessionStorage.getItem('token'));\n    if (_.has(respPut, \"status\") && respPut.status === 200) {\n      await updateList()\n      Swal.fire(\n        \"Registro Actualizado!\",\n        `Se actualizo el registro con #${data._id}`,\n        \"success\"\n      );\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Error al actualizar\",\n        footer: \"Hubo un error al actualizo el registro, por favor reintente!\"\n      });\n    }\n    cleanInputs()\n  };\n\n  const cleanInputs = () => {\n    setSuburb(\"\")\n    setSuburbOptions([])\n    setDelegation(\"\")\n    setDelegationOptions([])\n    setCity(\"\")\n    setCityOptions([])\n    setStatus(\"\")\n    setStatusOptions([])\n    setCountry(\"\")\n    setCountryOptions([])\n    setCp(\"\")\n    setStreet(\"\")\n    setNumExt(\"\")\n    setNumInt(\"\")\n  }\n\n  const updateList = async () => {\n    const response = await getListRecords(sessionStorage.getItem('token'));\n    if (_.has(response, \"status\") && response.status === 200) {\n      dispatch(updateListItems(response.data))\n    }\n    dispatch(setModalVisible(false))\n}\n\n  const handleChange = (e) => {\n    if (e.target.name !== undefined && e.target.name === \"street\")\n      setStreet(e.target.value);\n    if (e.target.name !== undefined && e.target.name === \"numExt\")\n      setNumExt(e.target.value);\n    if (e.target.name !== undefined && e.target.name === \"numInt\")\n      setNumInt(e.target.value);\n    if (e.target.name !== undefined && e.target.name === \"cp\")\n      autoCompletDropdowns(e.target.value);\n  };\n\n  const autoCompletDropdowns = async (value) => {\n    setSuburb(\"\")\n    setSuburbOptions([])\n    setDelegation(\"\")\n    setDelegationOptions([])\n    setCity(\"\")\n    setCityOptions([])\n    setStatus(\"\")\n    setStatusOptions([])\n    setCountry(\"\")\n    setCountryOptions([])\n    setCp(value);\n    await getInfoCp(value);\n  };\n\n  const getInfoCp = async (cp) => {\n    let statusOptionsAux = []\n    let delegationOptionsAux = []\n    let suburbOptionsAux = []\n    let cityOptionsAux = []\n    let countryOptionsAux = []\n\n    let respGet = cp.length === 5 ? await getInfoByCp(cp) : undefined;\n    respGet !== undefined && !respGet.error && respGet.forEach((item) => {\n      if (_.find(statusOptionsAux, [\"value\", item.response.estado]) === undefined)\n        statusOptionsAux.push({ value: item.response.estado, label: item.response.estado })\n\n      if (_.find(delegationOptionsAux, [\"value\", item.response.municipio]) === undefined)\n        delegationOptionsAux.push({ value: item.response.municipio, label: item.response.municipio })\n\n      if (_.find(suburbOptionsAux, [\"value\", item.response.asentamiento]) === undefined)\n        suburbOptionsAux.push({ value: item.response.asentamiento, label: item.response.asentamiento })\n\n      if (_.find(cityOptionsAux, [\"value\", item.response.ciudad]) === undefined)\n        cityOptionsAux.push({ value: item.response.ciudad, label: item.response.ciudad })\n\n      if (_.find(countryOptionsAux, [\"value\", item.response.pais]) === undefined)\n        countryOptionsAux.push({ value: item.response.pais, label: item.response.pais })\n    });\n\n    setStatusOptions(statusOptionsAux)\n    setDelegationOptions(delegationOptionsAux)\n    setSuburbOptions(suburbOptionsAux)\n    setCityOptions(cityOptionsAux)\n    setCountryOptions(countryOptionsAux)\n  };\n\n  return (\n    <div className=\"container-divs\">\n      <div className=\"container-logo\">\n        <img src={formLogo} alt=\"form logo\" />\n      </div>\n      <div className=\"container form\">\n        <div className=\"form-group\">\n          <label>Calle:</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Ingrese Calle\"\n            type=\"text\"\n            name=\"street\"\n            value={street}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Número exterior:</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Ingrese Número exterior\"\n            type=\"text\"\n            name=\"numExt\"\n            value={numExt}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Número interior:</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Ingrese Número interior\"\n            type=\"text\"\n            name=\"numInt\"\n            value={numInt}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Código postal</label>\n          <input\n            className=\"form-control\"\n            placeholder=\"Ingrese CP a buscar..\"\n            type=\"text\"\n            name=\"cp\"\n            value={cp}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Colonia:</label>\n          <Select\n            options={suburbOptions}\n            onChange={(option) => setSuburb(option)}\n            defaultValue={suburb}\n            value={suburb}\n            isSearchable\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Municipio / Delegación:</label>\n          <Select\n            options={delegationOptions}\n            onChange={(option) => setDelegation(option)}\n            defaultValue={delegation}\n            value={delegation}\n            isSearchable\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Ciudad:</label>\n          <Select\n            options={cityOptions}\n            onChange={(option) => setCity(option)}\n            defaultValue={city}\n            value={city}\n            isSearchable\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Estado:</label>\n          <Select\n            options={statusOptions}\n            onChange={(option) => setStatus(option)}\n            defaultValue={status}\n            value={status}\n            isSearchable\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>País:</label>\n          <Select\n            options={countryOptions}\n            onChange={(option) => setCountry(option)}\n            defaultValue={country}\n            value={country}\n            isSearchable\n          />\n        </div>\n        <div className=\"btn-group\">\n          <button\n            type=\"submit\"\n            disabled={!state.login}\n            className=\"btn btn-color\"\n            onClick= {(mode === \"edit\" && handleEdit) || (mode === undefined && handleSubmit)}\n          >\n            {(mode === \"edit\" && 'Editar') || (mode === undefined && 'Guardar')}\n          </button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Forms;\n","import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../store/reducer\";\nimport { setItem, updateListItems, setModalVisible, setLoading } from \"../store/actions\";\nimport { getListRecords, deleteRecord, getById } from \"../services/ApiConekta\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport _ from \"lodash\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport './index.css';\n\n\nconst columns = [\n  { id: '_id', label: '#ID', minWidth: 150 },\n  { id: 'street', label: 'Calle', minWidth: 120 },\n  { id: 'numExt', label: 'Número Exterior', minWidth: 80 },\n  { id: 'numInt', label: 'Número Interior', minWidth: 80 },\n  { id: 'cp', label: 'Código Postal', minWidth: 80 },\n  { id: 'suburb', label: 'Colonia', minWidth: 140 },\n  { id: 'delegation', label: 'Municipio / Delegación', minWidth: 140 },\n  { id: 'city', label: 'Ciudad', minWidth: 150 },\n  { id: 'status', label: 'Estado', minWidth: 150 },\n  { id: 'country', label: 'País', minWidth: 140 },\n  { id: 'actions', label: '', minWidth: 130 },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst ReactTable = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = newPage => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = e => {\n    setRowsPerPage(+e.target.value);\n    setPage(0);\n  };\n\n  const loadData = async () => {\n    dispatch(setLoading(true))\n    const response = await getListRecords(sessionStorage.getItem('token'));\n    if (_.has(response, \"status\") && response.status === 200) {\n      dispatch(updateListItems(response.data))\n    } else {\n      dispatch(updateListItems([]))\n    }\n    dispatch(setLoading(false))\n  }\n\n  const getColumns = () => {\n    return [<TableRow>\n      {columns.map((column) => (\n        <TableCell\n          key={column.id}\n          align={column.align}\n          style={{ minWidth: column.minWidth }}\n        >\n          {column.label}\n        </TableCell>\n      ))}\n    </TableRow>]\n  }\n\n  const deleteItem = async (_id) => {\n    dispatch(setLoading(true))\n    const response = await deleteRecord(_id, sessionStorage.getItem('token'));\n    if (_.has(response, \"status\") && response.status === 200) {\n      await loadData()\n    }\n    dispatch(setLoading(false))\n  }\n\n  const updateItem = async (_id) => {\n    const response = await getById(_id, sessionStorage.getItem('token'));\n    if (_.has(response, \"status\") && response.status === 200) {\n      dispatch(setItem({}))\n      const item = {\n        '_id': response.data._id,\n        'cp': response.data.cp,\n        'street': response.data.street,\n        'numExt': response.data.numExt,\n        'numInt': response.data.numInt,\n        'suburb': { label: response.data.suburb, value: response.data.suburb },\n        'delegation': { label: response.data.delegation, value: response.data.delegation },\n        'city': { label: response.data.city, value: response.data.city },\n        'status': { label: response.data.status, value: response.data.status },\n        'country': { label: response.data.country, value: response.data.country },\n      }\n      dispatch(setItem(item))\n      dispatch(setModalVisible(true))\n    }\n  }\n\n  const getRows = () => {\n    return [\n      state.listItems.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n        return (\n          <TableRow hover role=\"checkbox\" tabIndex={-1} key={row[\"_id\"]}>\n            {columns.map((column) => {\n              const value = row[column.id];\n              return (\n                <TableCell key={column.id} align={column.align}>\n                  {column.format && typeof value === 'number' ? column.format(value) : value}\n                  {column.id === 'actions' &&\n                    [<IconButton color=\"secondary\" aria-label=\"delete\" onClick={() => deleteItem(row[\"_id\"])}>\n                      <DeleteIcon />\n                    </IconButton>,\n                    <IconButton color=\"primary\" aria-label=\"edit\" onClick={() => updateItem(row[\"_id\"])}>\n                      <EditIcon />\n                    </IconButton>\n                    ]}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        );\n      })\n    ]\n  }\n\n  return (\n    <>\n      {!state.loading && <Paper className={classes.root}>\n        <TableContainer >\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              {getColumns()}\n            </TableHead>\n            <TableBody>\n              {getRows()}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={state.listItems.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>}\n      {state.loading && <div className=\"center-spinner\"><CircularProgress /></div>}\n    </>\n  );\n}\n\nexport default ReactTable;","import React, { useContext } from \"react\";\nimport { AppContext } from \"../store/reducer\";\nimport { getListRecords} from \"../services/ApiConekta\";\nimport Modal from '@material-ui/core/Modal';\nimport Paper from \"@material-ui/core/Paper\";\nimport Form from './Form';\nimport { setModalVisible, updateListItems } from \"../store/actions\";\nimport './index.css';\nimport _ from \"lodash\";\n\n\nconst ModalEdit = () => {\n    const { state, dispatch } = useContext(AppContext);\n\n    const handleClose = async () => {\n        const response = await getListRecords(sessionStorage.getItem('token'));\n        if (_.has(response, \"status\") && response.status === 200) {\n          dispatch(updateListItems(response.data))\n        }\n        dispatch(setModalVisible(false))\n    }\n\n    return (\n        <>\n            <Modal\n                open={state.modalVisible}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                className=\"modal-css\"\n            >\n                <Paper elevation={3} className=\"paper-css\">\n                    <Form mode=\"edit\" />\n                </Paper>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalEdit;","import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../store/reducer\";\nimport { setLoading, updateListItems } from \"../store/actions\";\nimport { getListRecords } from \"../services/ApiConekta\";\nimport Table from './Table';\nimport ModalEdit from './ModalEdit';\nimport _ from \"lodash\";\n\nconst Admin = () => {\n  const { dispatch } = useContext(AppContext);\n\n  const loadData = async () => {\n    dispatch(setLoading(true))\n    const response = await getListRecords(sessionStorage.getItem('token'));\n    if (_.has(response, \"status\") && response.status === 200) {\n      dispatch(updateListItems(response.data))\n    } else {\n      dispatch(updateListItems([]))\n    }\n    dispatch(setLoading(false))\n  }\n\n  useEffect(() => {\n      loadData()\n  }, []);\n\n\n  return (\n    <>\n      <Table />\n      <ModalEdit/>\n    </>\n  );\n};\n\nexport default Admin;\n","import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../store/reducer\";\nimport { setLogin } from \"../store/actions.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { login } from \"../services/ApiConekta\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Admin from \"./Admin\";\nimport _ from \"lodash\";\n\nconst RouterComponent = () => {\n  const { state, dispatch } = useContext(AppContext);\n\n  useEffect(() => {\n    (async () => {\n      if(!state.login){\n        const response = await login('test', 'test');\n        if (_.has(response, \"status\") && response.status === 200) {\n          dispatch(setLogin(true))\n          sessionStorage.setItem('token', response.data.token)\n        } else {\n          dispatch(setLogin(false))\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Form />} />\n          <Route exact path=\"/admin\" render={() => <Admin />} />\n        </Switch>\n      </main>\n    </Router>\n  );\n};\n\nexport default RouterComponent;","import React, { useReducer } from \"react\";\nimport { initialState, reducer, AppContext } from \"./store/reducer\";\nimport Router from \"./components/Router\";\n\n\nconst App = () => {\n  let [state, dispatch] = useReducer(reducer, initialState);\n  let value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>\n      <Router />\n    </AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}